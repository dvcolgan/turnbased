// Generated by CoffeeScript 1.6.3
var CreateAccountController, GameController, PlayController, gameApp, randomChoice;

gameApp = angular.module('gameApp', []);

gameApp.config(function($routeProvider) {
  $routeProvider.when('/create-account/', {
    templateUrl: 'partials/create-account.html',
    controller: CreateAccountController
  });
  $routeProvider.when('/new-game/', {
    templateUrl: 'partials/new-game.html',
    controller: GameController
  });
  return $routeProvider.when('/play/', {
    templateUrl: 'partials/play.html',
    controller: PlayController
  });
});

gameApp.config(function($interpolateProvider) {
  return $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
});

gameApp.directive('blur', function() {
  return function(scope, element, attrs) {
    return element.bind('blur', function() {
      return scope.$apply(attrs.blur);
    });
  };
});

gameApp.directive("repeatPassword", function() {
  return {
    require: "ngModel",
    link: function(scope, elem, attrs, ctrl) {
      var otherInput;
      otherInput = elem.inheritedData("$formController")[attrs.repeatPassword];
      ctrl.$parsers.push(function(value) {
        if (value === otherInput.$viewValue) {
          ctrl.$setValidity("repeat", true);
          return value;
        }
        return ctrl.$setValidity("repeat", false);
      });
      return otherInput.$parsers.push(function(value) {
        ctrl.$setValidity("repeat", value === ctrl.$viewValue);
        return value;
      });
    }
  };
});

gameApp.directive('unique', function($http, $compile) {
  return {
    require: 'ngModel',
    restrict: 'A',
    link: function(scope, element, attrs, ctrl) {
      var spinner;
      spinner = angular.element('<img src="/static/images/ajax-loader.gif" />');
      element.append(spinner);
      $compile(spinner)(scope);
      spinner.hide();
      return ctrl.$parsers.push(function(viewValue) {
        spinner.show();
        if (viewValue) {
          $http.get('/api/account/exists/' + attrs.unique + '/' + viewValue + '/').success(function(data, status, headers, config) {
            spinner.hide();
            if (data.taken) {
              return ctrl.$setValidity('unique', false);
            } else {
              return ctrl.$setValidity('unique', true);
            }
          }).error(function(data, status, headers, config) {
            return alert('could not connect to server');
          });
        } else {
          spinner.hide();
        }
        return viewValue;
      });
    }
  };
});

gameApp.factory('Data', function() {
  return {
    world_names: ['Atlantis', 'Azeroth', 'Camelot', 'Narnia', 'Hyrule', 'Middle-earth', 'The Neverhood', 'Rapture', 'Terabithia', 'Kanto', 'The Grand Line', 'Tatooine', 'Naboo', 'Pandora', 'Corneria', 'Termina', 'Xen', 'City 17', 'Tokyo', 'Ithica', 'Peru'],
    player_names: [['Frodo Baggins', 'Shire Hobbits'], ['Elrond', 'Mirkwood Elves'], ['Durin Darkhammer', 'Moria Dwarves'], ['Ness', 'Eagleland'], ['Daphnes Nohansen Hyrule', 'Hylians'], ['Aragorn son of Arathorn', 'Gondorians'], ['Strong Bad', 'Strongbadia'], ['Captain Homestar', 'The Team'], ['T-Rex', 'Dinosaurs'], ['Refrigerator', 'Kitchen Appliances'], ['The Burger King', 'Fast Foodies'], ['Larry King Live', 'Interviewees'], ['King', 'Mimigas'], ['Luke Skywalker', 'The Rebel Alliance'], ['Darth Vader', 'The Empire'], ['Jean-Luc Picard', 'The Enterprise'], ['The Borg Queen', 'The Borg'], ['Bowser', 'Koopas']]
  };
});

randomChoice = function(collection) {
  return collection[Math.floor(Math.random() * collection.length)];
};

CreateAccountController = function($scope) {
  $scope.newAccount = {
    username: '',
    email: '',
    password: '',
    password2: ''
  };
  $scope.passwordsMatch = null;
  return $scope.canSubmit = function() {
    return !($scope.newAccount.username !== '' && $scope.newAccount.email !== '' && $scope.newAccount.password !== '' && $scope.newAccount.password === $scope.newAccount.password2);
  };
};

GameController = function($scope, Data) {
  $scope.data = Data;
  $scope.world_name = '';
  $scope.leader_name = '';
  $scope.people_name = '';
  $scope.getRandomWorldName = function() {
    return $scope.world_name = randomChoice($scope.data.world_names);
  };
  return $scope.getRandomCivName = function() {
    var names;
    names = randomChoice($scope.data.player_names);
    $scope.leader_name = names[0];
    return $scope.people_name = names[1];
  };
};

PlayController = function($scope) {
  var i, j;
  $scope.rows = (function() {
    var _i, _results;
    _results = [];
    for (j = _i = 0; _i < 15; j = ++_i) {
      _results.push((function() {
        var _j, _results1;
        _results1 = [];
        for (i = _j = 0; _j < 28; i = ++_j) {
          _results1.push({
            color: 'white',
            unit: '',
            row: i,
            col: j
          });
        }
        return _results1;
      })());
    }
    return _results;
  })();
  $scope.currentColor = '1E77B4';
  $scope.currentPlacement = 'unit';
  return $scope.modifySquare = function(square) {
    if ($scope.currentPlacement === 'unit') {
      if (square.unit === 'unit') {
        return square.unit = '';
      } else {
        square.unit = 'unit';
        return square.color = $scope.currentColor;
      }
    } else if ($scope.currentPlacement === 'background') {
      if (square.color === $scope.currentColor) {
        square.color = 'white';
        return square.unit = '';
      } else {
        return square.color = $scope.currentColor;
      }
    }
  };
};
